@model Sparta_Global_Profile.Models.Profile
@using Microsoft.AspNetCore.Http

@{
    ViewData["Title"] = $"{Model.User.UserName}'s Profile";
    var userTypeId = Context.Session.GetString("UserTypeId");
}
<div class="body-card">

    <iframe class="video" width="640" height="360" src="@Model.ProfileVideo" allowfullscreen style="border:none;"></iframe>
  
    <h1>
        <a>
            <img width="100" height="100" class="profile-image" src="@Model.ProfilePicture">
            <span class="pink-header">Meet </span>@Html.DisplayFor(model => model.ProfileName)
        </a>
        <a class="approved-pill">

            @if (userTypeId != "2")
            {
                if (@Model.Approved)
                {
                    <span>Approved</span>
                }
                else
                {
                    <span>Unapproved</span>
                }
            }

        </a>
    </h1>

    <hr />
    <h2><span class="academy-stream">Academy Stream | </span>@Html.DisplayFor(model => model.Course.CourseName)</h2>

    <br />
    <p>@Html.DisplayFor(model => model.Summary)</p>

        <h5>Skills:</h5>

        <ul>
            @foreach (var skill in Model.Skills)
            {
                <li>@skill.SkillName</li>
            }
        </ul>

    <h2 style="text-decoration:underline">Client Assignments</h2>

    @foreach (var assignment in Model.Assignments)
    {
        <h5 class="deep-pink-header">@assignment.StartDate.ToString("dd MMMM yyyy").ToUpper() - @assignment.EndDate.ToString("dd MMMM yyyy").ToUpper()</h5>
        <h5 class="pink-header">@assignment.CompanyName.ToUpper()</h5>
        <h5 class="pink-header">@assignment.Position.ToUpper()</h5>
        <p>@assignment.Summary</p>
        <br />
    }

    <h2 style="text-decoration:underline">Academy Projects</h2>
    @foreach (var project in Model.SpartaProjects)
    {
        <h5 class="pink-header">@project.ProjectName.ToUpper()</h5>
        <p>@project.ProjectBio</p>
        <ul>
            @foreach (var link in project.ProjectLinks)
            {
                <li><a class="pink-link-text" href=@link.Url>@link.LinkText</a></li>
            }
        </ul>
        <br />
    }

    <h2 style="text-decoration:underline">Employment History</h2>
    @foreach (var employment in Model.Employment)
    {
        <h5 class="deep-pink-header">@employment.StartDate.ToString("dd MMMM yyyy").ToUpper() - @employment.EndDate.ToString("dd MMMM yyyy").ToUpper()</h5>
        <h5 class="pink-header">@employment.CompanyName.ToUpper()</h5>
        <h5 class="pink-header ">@employment.Position.ToUpper()</h5>
        <p>@employment.Summary</p>
        <br />
    }

    <h2 style="text-decoration:underline">Education</h2>
    @foreach (var education in Model.Education)
    {
        <h5 class="deep-pink-header">@education.StartDate.ToString("dd MMMM yyyy") - @education.EndDate.ToString("dd MMMM yyyy")</h5>
        <h5 class="pink-header">@education.Establishment</h5>
        <h5 class="pink-header">@education.Qualification: @education.Grade</h5>
        <br />
    }

    <h2 style="text-decoration:underline">Certifications</h2>
    @foreach (var certification in Model.Certifications)
    {
        <h5>@certification.CertificationName</h5>
        <p>@certification.Summary</p>
        <br />
    }

    <h2 style="text-decoration:underline">Hobbies/Extra Curricular Activities</h2>
    <ul>
        @foreach (var hobby in Model.Hobbies)
        {
            <li><span class="hobby">@hobby.HobbyName.ToUpper()</span> - @hobby.HobbyDescription</li>
        }
    </ul>


</div>




@*<div>
        <h4>Profile</h4>
        <hr />
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Status)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Status.StatusName)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.ProfileName)
            </dt>
            <dd class="col-sm-10">
               @Html.DisplayFor(model => model.ProfileName)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.ProfilePicture)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.ProfilePicture)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Course)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Course.CourseName)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Approved)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Approved)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Summary)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Summary)
            </dd>
        </dl>
            <h5>Education</h5>
            @foreach(var item in Model.Education)
            {
                <p> Establishment: @item.Establishment </p>
                <p> Grade: @item.Grade </p>
                @if( item.Modules.Count > 0)
                {
                    <p> Modules </p>
                    <ul>
                        @foreach(var module in item.Modules)
                        {
                            <li> @module.ModuleName - Course year: @module.CourseYear </li>
                        }
                    </ul>
                }

            }
    </div>*@

<div>
    @if (userTypeId != "2")
    {
        <a asp-action="Edit" asp-route-id="@Model.ProfileId">Edit</a>
    }
    @if (userTypeId != "1")
    {
        <a asp-action="Index">Back to List</a>
    }
</div>
